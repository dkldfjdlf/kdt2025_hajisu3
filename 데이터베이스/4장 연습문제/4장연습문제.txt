Root로 로그인후 실행
# 데이터베이스 생성
create database company_db;

#사용자 생성....
create user madanguser@localhost identified by '1234';

# 3.권한 설정
grant all privileges on company_db.* to madanguser@localhost with grant option;
commit;

madanguser로 실행….
use company_db;

drop table if exists emp ;
drop table if exists dept;
drop table if exists salgrade;
CREATE TABLE IF NOT EXISTS DEPT (
  DEPTNO integer NOT NULL,
  DNAME varchar(14),
  LOC varchar(13),
  PRIMARY KEY (DEPTNO)
);

INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES(20, 'RESEARCH', 'DALLAS');
INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES(30, 'SALES', 'CHICAGO');
INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES(40, 'OPERATIONS', 'BOSTON');

CREATE TABLE IF NOT EXISTS EMP (
  EMPNO integer NOT NULL PRIMARY KEY,
  ENAME varchar(10),
  JOB varchar(9),
  MGR integer,
  HIREDATE date,
  SAL integer,
  COMM integer,
  DEPTNO integer,
  FOREIGN KEY (deptno) REFERENCES Dept(deptno)
);

INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7369, 'SMITH', 'CLERK', 7902, '1980-12-17 00:00:00', 800, NULL, 20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20 00:00:00', 1600, 300, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7521, 'WARD', 'SALESMAN', 7698, '1981-02-22 00:00:00', 1250, 500, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7566, 'JONES', 'MANAGER', 7839, '1981-04-02 00:00:00', 2975, NULL, 20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28 00:00:00', 1250, 1400, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01 00:00:00', 2850, NULL, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7782, 'CLARK', 'MANAGER', 7839, '1981-06-09 00:00:00', 2450, NULL, 10);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7788, 'SCOTT', 'ANALYST', 7566, '1987-04-19 00:00:00', 3000, NULL, 20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7839, 'KING', 'PRESIDENT', NULL, '1981-11-17 00:00:00', 5000, NULL, 10);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08 00:00:00', 1500, 0, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7876, 'ADAMS', 'CLERK', 7788, '1987-05-23 00:00:00', 1100, NULL, 20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7900, 'JAMES', 'CLERK', 7698, '1981-12-03 00:00:00', 950, NULL, 30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7902, 'FORD', 'ANALYST', 7566, '1981-12-03 00:00:00', 3000, NULL, 20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7934, 'MILLER', 'CLERK', 7782, '1982-01-23 00:00:00', 1300, NULL, 10);

CREATE TABLE IF NOT EXISTS SALGRADE(
	GRADE INTEGER,
	LOSAL INTEGER,
	HISAL INTEGER
	);

INSERT INTO SALGRADE VALUES (1, 700, 1200);
INSERT INTO SALGRADE VALUES (2, 1201, 1400);
INSERT INTO SALGRADE VALUES (3, 1401, 2000);
INSERT INTO SALGRADE VALUES (4, 2001, 3000);
INSERT INTO SALGRADE VALUES (5, 3001, 9999);

select * from emp; 

- [사원 데이터베이스]  데이터베이스를 이용하여 다음 질의에 해당하는 SQL문을 작성하시오.
    - 서브쿼리 / 조인 사용
    
    (1) 팀장(mgr)이 없는 직원의 이름을 나타내시오

SELECT ename
FROM emp
WHERE mgr IS NULL;
    

(2) 사원의 이름과 부서의 이름을 나타내시오(조인/스칼라 부속질의 사용).

SELECT e.ename, d.dname
FROM emp e
JOIN dept d ON e.deptno = d.deptno;


(3) ‘CHICAGO’에 근무하는 사원의 이름을 나타내시오(조인/인라인 뷰/중첩질의/EXISTS 사용).

SELECT e.ename
FROM emp e
JOIN dept d ON e.deptno = d.deptno
WHERE d.loc = 'CHICAGO';

(4) 평균보다 급여가 많은 직원의 이름을 나타내시오.

SELECT ename
FROM emp
WHERE sal > (
    SELECT AVG(sal) FROM emp
);

(5) 자기 부서의 평균보다 급여가 많은 직원의 이름을 나타내시오(상관 부속질의 사용).

SELECT e1.ename
FROM emp e1
WHERE sal > (
    SELECT AVG(e2.sal)
    FROM emp e2
    WHERE e1.deptno = e2.deptno
);



- 뷰를 만들어 보고 sql 결과를 확인해 보자….
    - SalesmanView

-- 사용할 데이터베이스 선택
USE company_db;

-- 기존에 뷰가 있다면 삭제 (에러 방지)
DROP VIEW IF EXISTS SalesTop;
DROP VIEW IF EXISTS SalesmanView;

-- 1. SalesmanView 생성: SALESMAN 직책 사원과 부서명 포함
CREATE VIEW SalesmanView AS
SELECT 
    e.empno, 
    e.ename, 
    e.sal, 
    d.dname
FROM 
    emp e
JOIN 
    dept d ON e.deptno = d.deptno
WHERE 
    e.job = 'SALESMAN';

-- 2. SalesTop 생성: 급여 1500 이상인 세일즈맨만 포함
CREATE VIEW SalesTop AS
SELECT 
    empno, 
    ename, 
    sal, 
    dname
FROM 
    SalesmanView
WHERE 
    sal >= 1500;

-- 3. SalesmanView에서 3명 조회
SELECT empno, ename, sal
FROM SalesmanView
LIMIT 3;

-- 4. SalesTop 전체 조회
SELECT *
FROM SalesTop;






        
        ```sql
        CREATE VIEW		SalesmanView
        		AS	SELECT	e.empno, e.ename, e.sal, d.dname
        			FROM	Emp e, Dept d
        			WHERE	e.deptno=d.deptno AND 

-- 이미 있으면 삭제
DROP VIEW IF EXISTS SalesmanView;

-- 뷰 생성
CREATE VIEW SalesmanView AS
SELECT 
    e.empno, 
    e.ename, 
    e.sal, 
    d.dname
FROM 
    emp e
JOIN 
    dept d ON e.deptno = d.deptno
WHERE 
    e.job = 'SALESMAN';

empno	ename	sal	dname
7499	ALLEN	1600	SALES
7521	WARD	1250	SALES
7654	MARTIN	1250	SALES
7844	TURNER	1500	SALES



job='SALESMAN';
        			
        CREATE VIEW		SalesTop
        		AS	SELECT	empno, ename, sal, dname
        			FROM	SalesmanView
        			WHERE	sal >= 1500;

-- 이미 있으면 삭제
DROP VIEW IF EXISTS SalesTop;

-- 뷰 생성
CREATE VIEW SalesTop AS
SELECT 
    empno, 
    ename, 
    sal, 
    dname
FROM 
    SalesmanView
WHERE 
    sal >= 1500;

empno	ename	sal	dname
7499	ALLEN	1600	SALES
7844	TURNER	1500	SALES
        ```
        
    - select empno. ename, sal
    from salesmanview  limit 3; 의 결과는

SELECT 
    empno, 
    ename, 
    sal
FROM 
    SalesmanView
LIMIT 3;

empno	ename	sal
7499	ALLEN	1600
7521	WARD	1250
7654	MARTIN	1250

select * from SalesTop;

SELECT * 
FROM SalesTop;

empno	ename	sal	dname
7499	ALLEN	1600	SALES
7844	TURNER	1500	SALES
